// <auto-generated />
using System;
using CodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirst.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230404034726_UpdateOD-PA")]
    partial class UpdateODPA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirst.Models.Agenda", b =>
                {
                    b.Property<int>("IDAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDAgenda"));

                    b.Property<DateTime>("Fecha_Hora_Fin")
                        .HasColumnType("date");

                    b.Property<DateTime>("Fecha_Hora_Inicio")
                        .HasColumnType("date");

                    b.Property<int>("IDOdontologo")
                        .HasColumnType("int");

                    b.Property<int>("IDPaciente")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDAgenda");

                    b.HasIndex("IDOdontologo");

                    b.HasIndex("IDPaciente");

                    b.ToTable("agendas");
                });

            modelBuilder.Entity("CodeFirst.Models.Historial", b =>
                {
                    b.Property<int>("IDHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDHistorial"));

                    b.Property<string>("H_Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("H_Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("H_Pregunta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("H_Respuesta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IDPaciente")
                        .HasColumnType("int");

                    b.HasKey("IDHistorial");

                    b.HasIndex("IDPaciente");

                    b.ToTable("Historials");
                });

            modelBuilder.Entity("CodeFirst.Models.Odontograma", b =>
                {
                    b.Property<int>("IDOdontograma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDOdontograma"));

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IDTratamiento")
                        .HasColumnType("int");

                    b.Property<string>("O_Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("O_Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("O_Posicion")
                        .HasColumnType("int");

                    b.HasKey("IDOdontograma");

                    b.HasIndex("IDTratamiento");

                    b.ToTable("Odontogramas");
                });

            modelBuilder.Entity("CodeFirst.Models.Odontologo", b =>
                {
                    b.Property<int>("IDOdontologo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDOdontologo"));

                    b.Property<string>("OD_Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OD_DNI")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OD_Domicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OD_Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OD_Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OD_Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OD_Turno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDOdontologo");

                    b.ToTable("Odontologos");
                });

            modelBuilder.Entity("CodeFirst.Models.Paciente", b =>
                {
                    b.Property<int>("IDPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPaciente"));

                    b.Property<string>("P_Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("P_DNI")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("P_Domicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("P_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("P_FechaNac")
                        .HasColumnType("date");

                    b.Property<string>("P_Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("P_Ocupacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("P_Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDPaciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("CodeFirst.Models.Pago_Tratamiento", b =>
                {
                    b.Property<int>("IDPago_Tramiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPago_Tramiento"));

                    b.Property<int>("IDPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IDTratamiento")
                        .HasColumnType("int");

                    b.Property<DateTime>("PT_Fecha")
                        .HasColumnType("date");

                    b.Property<int>("PT_Monto")
                        .HasColumnType("int");

                    b.HasKey("IDPago_Tramiento");

                    b.HasIndex("IDPaciente");

                    b.HasIndex("IDTratamiento");

                    b.ToTable("Pago_Tratamientos");
                });

            modelBuilder.Entity("CodeFirst.Models.Realiza", b =>
                {
                    b.Property<int>("IDPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IDTratamiento")
                        .HasColumnType("int");

                    b.Property<DateTime>("R_Fecha")
                        .HasColumnType("date");

                    b.Property<string>("R_Procedimiento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDPaciente", "IDTratamiento");

                    b.HasIndex("IDTratamiento");

                    b.ToTable("Realizas");
                });

            modelBuilder.Entity("CodeFirst.Models.Receta_Medica", b =>
                {
                    b.Property<int>("IDReceta_Medica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDReceta_Medica"));

                    b.Property<string>("Dosis")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IDTratamiento")
                        .HasColumnType("int");

                    b.Property<string>("Medicamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tiempo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDReceta_Medica");

                    b.HasIndex("IDTratamiento");

                    b.ToTable("Receta_Medicas");
                });

            modelBuilder.Entity("CodeFirst.Models.Tratamiento", b =>
                {
                    b.Property<int>("IDTratamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDTratamiento"));

                    b.Property<int>("Saldo")
                        .HasColumnType("int");

                    b.Property<string>("T_Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("T_Monto")
                        .HasColumnType("int");

                    b.Property<string>("T_Procedimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("T_Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDTratamiento");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("CodeFirst.Models.Tutor_Padre", b =>
                {
                    b.Property<int>("ID_Tutor_Padre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Tutor_Padre"));

                    b.Property<int>("IDPaciente")
                        .HasColumnType("int");

                    b.Property<string>("TP_Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TP_Ocupacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TP_Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_Tutor_Padre");

                    b.HasIndex("IDPaciente");

                    b.ToTable("Tutor_Padres");
                });

            modelBuilder.Entity("CodeFirst.Models.Agenda", b =>
                {
                    b.HasOne("CodeFirst.Models.Odontologo", "Odontologo")
                        .WithMany("Agenda")
                        .HasForeignKey("IDOdontologo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirst.Models.Paciente", "Paciente")
                        .WithMany("Agenda")
                        .HasForeignKey("IDPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Odontologo");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CodeFirst.Models.Historial", b =>
                {
                    b.HasOne("CodeFirst.Models.Paciente", "Paciente")
                        .WithMany("Historials")
                        .HasForeignKey("IDPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CodeFirst.Models.Odontograma", b =>
                {
                    b.HasOne("CodeFirst.Models.Tratamiento", "Tratamiento")
                        .WithMany("Odontogramas")
                        .HasForeignKey("IDTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("CodeFirst.Models.Pago_Tratamiento", b =>
                {
                    b.HasOne("CodeFirst.Models.Paciente", "Paciente")
                        .WithMany("Pago_Tratamientos")
                        .HasForeignKey("IDPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirst.Models.Tratamiento", "Tratamiento")
                        .WithMany("Pago_Tratamientos")
                        .HasForeignKey("IDTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("CodeFirst.Models.Realiza", b =>
                {
                    b.HasOne("CodeFirst.Models.Paciente", "Paciente")
                        .WithMany("Realizas")
                        .HasForeignKey("IDPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirst.Models.Tratamiento", "Tratamiento")
                        .WithMany("Realizas")
                        .HasForeignKey("IDTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("CodeFirst.Models.Receta_Medica", b =>
                {
                    b.HasOne("CodeFirst.Models.Tratamiento", "Tratamiento")
                        .WithMany("Receta_Medicas")
                        .HasForeignKey("IDTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("CodeFirst.Models.Tutor_Padre", b =>
                {
                    b.HasOne("CodeFirst.Models.Paciente", "Paciente")
                        .WithMany("Tutor_Padres")
                        .HasForeignKey("IDPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CodeFirst.Models.Odontologo", b =>
                {
                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("CodeFirst.Models.Paciente", b =>
                {
                    b.Navigation("Agenda");

                    b.Navigation("Historials");

                    b.Navigation("Pago_Tratamientos");

                    b.Navigation("Realizas");

                    b.Navigation("Tutor_Padres");
                });

            modelBuilder.Entity("CodeFirst.Models.Tratamiento", b =>
                {
                    b.Navigation("Odontogramas");

                    b.Navigation("Pago_Tratamientos");

                    b.Navigation("Realizas");

                    b.Navigation("Receta_Medicas");
                });
#pragma warning restore 612, 618
        }
    }
}
